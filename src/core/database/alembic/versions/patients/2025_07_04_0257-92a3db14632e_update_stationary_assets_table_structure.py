"""Update stationary assets table structure

Revision ID: 92a3db14632e
Revises: e7f903f4f2fb
Create Date: 2025-07-04 02:57:45.874719

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '92a3db14632e'
down_revision: Union[str, None] = 'e7f903f4f2fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('stationary_assets', sa.Column('receive_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('stationary_assets', sa.Column('receive_time', sa.Time(), nullable=True))
    op.add_column('stationary_assets', sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=True))
    op.add_column('stationary_assets', sa.Column('received_from', sa.String(length=255), nullable=True))
    op.add_column('stationary_assets', sa.Column('is_repeat', sa.Boolean(), nullable=True))
    op.add_column('stationary_assets', sa.Column('stay_period_start', sa.DateTime(timezone=True), nullable=True))
    op.add_column('stationary_assets', sa.Column('stay_period_end', sa.DateTime(timezone=True), nullable=True))
    op.add_column('stationary_assets', sa.Column('stay_outcome', sa.String(length=255), nullable=True))
    op.add_column('stationary_assets', sa.Column('diagnosis', sa.Text(), nullable=True))
    op.add_column('stationary_assets', sa.Column('area', sa.String(length=255), nullable=True))
    op.add_column('stationary_assets', sa.Column('specialist', sa.String(length=255), nullable=True))
    op.alter_column('stationary_assets', 'bg_asset_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('stationary_assets', 'card_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('stationary_assets', 'patient_full_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('stationary_assets', 'patient_iin',
               existing_type=sa.VARCHAR(length=12),
               nullable=True)
    op.alter_column('stationary_assets', 'patient_birth_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('stationary_assets', 'patient_address',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('stationary_assets', 'status',
               existing_type=postgresql.ENUM('REGISTERED', 'CONFIRMED', 'REFUSED', 'CANCELLED', name='assetstatusenum'),
               nullable=True)
    op.alter_column('stationary_assets', 'delivery_status',
               existing_type=postgresql.ENUM('RECEIVED_AUTOMATICALLY', 'PENDING_DELIVERY', 'DELIVERED', name='assetdeliverystatusenum'),
               nullable=True)
    op.alter_column('stationary_assets', 'has_confirm',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('stationary_assets', 'has_files',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('stationary_assets', 'has_refusal',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('stationary_assets', 'protocol_number')
    op.drop_column('stationary_assets', 'referral_type')
    op.drop_column('stationary_assets', 'reg_date')
    op.drop_column('stationary_assets', 'hospital_plan_date')
    op.drop_column('stationary_assets', 'referral_target')
    op.drop_column('stationary_assets', 'benefit_type_name')
    op.drop_column('stationary_assets', 'specialization')
    op.drop_column('stationary_assets', 'area_number')
    op.drop_column('stationary_assets', 'treatment_outcome')
    op.drop_column('stationary_assets', 'org_health_care_direct_name')
    op.drop_column('stationary_assets', 'rehabilitation_type')
    op.drop_column('stationary_assets', 'org_health_care_direct_code')
    op.drop_column('stationary_assets', 'sick_name')
    op.drop_column('stationary_assets', 'polyclinic_plan_date')
    op.drop_column('stationary_assets', 'refuse_reason_code')
    op.drop_column('stationary_assets', 'refusal_reg_date')
    op.drop_column('stationary_assets', 'hospital_notice_statuses')
    op.drop_column('stationary_assets', 'org_health_care_request_name')
    op.drop_column('stationary_assets', 'diagnosis_name')
    op.drop_column('stationary_assets', 'org_health_care_ref_code')
    op.drop_column('stationary_assets', 'hospital_date')
    op.drop_column('stationary_assets', 'benefit_type_code')
    op.drop_column('stationary_assets', 'patient_rpn_id')
    op.drop_column('stationary_assets', 'protocol_date')
    op.drop_column('stationary_assets', 'sick_code')
    op.drop_column('stationary_assets', 'refuse_justification')
    op.drop_column('stationary_assets', 'out_date')
    op.drop_column('stationary_assets', 'hospital_code')
    op.drop_column('stationary_assets', 'patient_sex_code')
    op.drop_column('stationary_assets', 'bed_profile_code')
    op.drop_column('stationary_assets', 'bed_profile_name')
    op.drop_column('stationary_assets', 'org_health_care_ref_name')
    op.drop_column('stationary_assets', 'refuse_reason_name')
    op.drop_column('stationary_assets', 'patient_citizen_id_code')
    op.drop_column('stationary_assets', 'diagnosis_code')
    op.drop_column('stationary_assets', 'additional_information')
    op.drop_column('stationary_assets', 'org_health_care_request_code')
    op.drop_column('stationary_assets', 'work_place')
    op.drop_column('stationary_assets', 'has_rehabilitation_files')
    op.drop_column('stationary_assets', 'direct_doctor')
    op.drop_column('stationary_assets', 'specialist_name')
    op.drop_column('stationary_assets', 'current_plan_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('stationary_assets', sa.Column('current_plan_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('specialist_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('direct_doctor', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('has_rehabilitation_files', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('work_place', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('org_health_care_request_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('additional_information', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('diagnosis_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('patient_citizen_id_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('refuse_reason_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('org_health_care_ref_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('bed_profile_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('bed_profile_code', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('patient_sex_code', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('hospital_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('out_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('refuse_justification', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('sick_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('protocol_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('patient_rpn_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('benefit_type_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('hospital_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('org_health_care_ref_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('diagnosis_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('org_health_care_request_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('hospital_notice_statuses', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('refusal_reg_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('refuse_reason_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('polyclinic_plan_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('sick_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('org_health_care_direct_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('rehabilitation_type', postgresql.ENUM('MEDICAL', 'SOCIAL', name='rehabilitationtypeenum'), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('org_health_care_direct_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('treatment_outcome', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('area_number', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('specialization', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('benefit_type_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('referral_target', postgresql.ENUM('REHABILITATION', 'TREATMENT', 'DIAGNOSIS', 'CONSULTATION', name='referraltargetenum'), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('hospital_plan_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('stationary_assets', sa.Column('reg_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('referral_type', postgresql.ENUM('REHABILITATION_TREATMENT', 'PLANNED_HOSPITALIZATION', 'EMERGENCY_HOSPITALIZATION', name='referraltypeenum'), autoincrement=False, nullable=False))
    op.add_column('stationary_assets', sa.Column('protocol_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.alter_column('stationary_assets', 'has_refusal',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('stationary_assets', 'has_files',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('stationary_assets', 'has_confirm',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('stationary_assets', 'delivery_status',
               existing_type=postgresql.ENUM('RECEIVED_AUTOMATICALLY', 'PENDING_DELIVERY', 'DELIVERED', name='assetdeliverystatusenum'),
               nullable=False)
    op.alter_column('stationary_assets', 'status',
               existing_type=postgresql.ENUM('REGISTERED', 'CONFIRMED', 'REFUSED', 'CANCELLED', name='assetstatusenum'),
               nullable=False)
    op.alter_column('stationary_assets', 'patient_address',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('stationary_assets', 'patient_birth_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('stationary_assets', 'patient_iin',
               existing_type=sa.VARCHAR(length=12),
               nullable=False)
    op.alter_column('stationary_assets', 'patient_full_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('stationary_assets', 'card_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('stationary_assets', 'bg_asset_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('stationary_assets', 'specialist')
    op.drop_column('stationary_assets', 'area')
    op.drop_column('stationary_assets', 'diagnosis')
    op.drop_column('stationary_assets', 'stay_outcome')
    op.drop_column('stationary_assets', 'stay_period_end')
    op.drop_column('stationary_assets', 'stay_period_start')
    op.drop_column('stationary_assets', 'is_repeat')
    op.drop_column('stationary_assets', 'received_from')
    op.drop_column('stationary_assets', 'actual_datetime')
    op.drop_column('stationary_assets', 'receive_time')
    op.drop_column('stationary_assets', 'receive_date')
    # ### end Alembic commands ###
